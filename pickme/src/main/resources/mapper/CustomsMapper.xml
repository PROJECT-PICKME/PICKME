<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="project.pickme.user.repository.CustomsMapper">
    <select id="findByCustomsId" parameterType="String" resultType="project.pickme.user.domain.Customs">
        select *
        from Customs
        where id = #{id}
    </select>

    <insert id="save" parameterType="project.pickme.user.domain.Customs">
        insert into Customs(id, password, role, name, tel)
        values (#{id}, #{password}, #{role}, #{name}, #{tel})
    </insert>

    <select id="findAll" resultType="project.pickme.user.domain.Customs">
        select *
        from Customs
    </select>

    <insert id="saveAll" parameterType="java.util.List">
        insert into Customs (id, password, name, tel, role)
        values
        <foreach collection="list" item="item" open="(" close=")" separator="), (">
            #{item.id}, #{item.password}, #{item.name}, #{item.tel}, #{item.role}
        </foreach>
    </insert>

    <delete id="deleteAll">
        delete
        from Customs
    </delete>

    <select id="findIncomeItemById" parameterType="String" resultType="project.pickme.user.dto.customs.IncomeDto">
        select url                                                                                  as itemImage,
               name                                                                                 as itemName,
               price                                                                                as income,
               end_time                                                                             as endTime,
               sum(price) over (order by end_time rows between unbounded preceding and current row) as totalIncome
        from (select m.url,
                     item.name,
                     item.price,
                     item.end_time
              from Image m
                       join (select i.item_id,
                                    i.name,
                                    b.price,
                                    i.end_time
                             from Item i
                                      join Bid b
                                           on i.item_id = b.item_id
                                               and i.status = 'CLOSED'
                                               and i.customs_id = #{id}
                                               and b.is_success = 1) as item
                            on m.item_id = item.item_id
                                and m.seq = 0) as income
        order by end_time desc
    </select>
</mapper>
