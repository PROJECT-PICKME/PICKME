<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="project.pickme.bid.repository.BidMapper">
    <resultMap id="BidResultMap" type="project.pickme.bid.domain.Bid">
        <id property="id" column="id"/>
        <result property="price" column="price"/>
        <result property="bidTime" column="bid_time"/>
        <result property="isSuccess" column="is_success"/>
        <association property="user" column="user_id" javaType="project.pickme.user.domain.User"
                     select="project.pickme.user.repository.UserMapper.findUserById"/>
        <association property="item" column="item_id" javaType="project.pickme.item.domain.Item"/>
    </resultMap>

    <select id="findAll" resultMap="BidResultMap">
        select b.bid_id  as id,
               b.price,
               b.bid_time,
               b.is_success,
               u.id      as user_id,
               i.item_id as item_id
        from Bid b
                 left join User u on b.user_id = u.id
                 left join Item i on b.item_id = i.item_id
    </select>

    <insert id="save" parameterType="project.pickme.bid.dto.response.BidDto" useGeneratedKeys="true" keyProperty="bidId">
        insert into Bid(item_id, user_id, price, bid_time, is_success)
        values (#{itemId}, #{userId}, #{price}, #{bidTime}, #{isSuccess})
    </insert>

    <delete id="deleteAll">
        delete
        from Bid
    </delete>

    <select id="findMaxBidByItemId" parameterType="long" resultType="long">
        select max(b.price) as price
        from Bid b
        group by b.item_id
        having b.item_id = #{itemId}
    </select>

    <select id="findBidById" parameterType="long" resultMap="BidResultMap">
        select b.bid_id  as id,
               b.price,
               b.bid_time,
               b.is_success,
               u.id      as user_id,
               i.item_id as item_id
        from Bid b
                 left join User u on b.user_id = u.id
                 left join Item i on b.item_id = i.item_id
        where b.bid_id = #{bidId}
    </select>

    <update id="updateBidSuccess" parameterType="long">
        update Bid
        set is_success = true
        where bid_id = #{bidId}
    </update>

    <select id="findAllPriceByItemId" parameterType="long" resultType="project.pickme.bid.dto.response.PriceDto">
        select b.price, u.id as userId, b.bid_id as bidId
        from Bid b
        left join User u on b.user_id = u.id
        where b.item_id = #{itemId}
        order by b.price
    </select>

    <!--내 낙찰 정보 조회-->
    <select id="findMySuccessfulBid">
        with LatestBids as (select item_id,
                                   user_id,
                                   bid_time,
                                   is_success,
                                   price,
                                   row_number() over (partition by item_id order by bid_time desc) as rn
                            from Bid
                            where is_success = 1)
        select i.item_id        as itemId,
               lb.user_id       as userId,
               i.name           as name,
               img.url          as imgUrl,
               i.start_time     as startTime,
               i.end_time       as endTime,
               d.invoice_number as invoiceNumber,
               d.status         as deliveryStatus,
               d.code           as deliveryCode,
               lb.is_success    as isSuccess,
               lb.price         as price,
               c.id             as customsId,
               c.name           as customsName
        from Item i
                 left join Customs c on i.customs_id = c.id
                 left join LatestBids lb on i.item_id = lb.item_id and lb.rn = 1
                 left join Delivery d on i.item_id = d.item_id
                 left join (select item_id, url
                            from Image
                            where seq = 0) img on i.item_id = img.item_id
        where lb.is_success = 1
          and lb.user_id = #{id}
    </select>

    <!-- 배송 관리에서 사용(낙찰된 제품)-->
    <select id="findSuccessfulBidByCustomerId">
        with LatestBids as (select item_id,
                                   user_id,
                                   bid_time,
                                   is_success,
                                   price,
                                   row_number() over (partition by item_id order by bid_time desc) as rn
                            from Bid
                            where is_success = 1)
        select i.item_id        as itemId,
               lb.user_id       as userId,
               i.name           as name,
               img.url          as imgUrl,
               i.start_time     as startTime,
               i.end_time       as endTime,
               d.invoice_number as invoiceNum,
               d.status         as deliveryStatus,
               d.code           as code,
               lb.is_success    as isSuccess,
               lb.price         as price,
               c.id             as customsId,
               c.name           as customsName
        from Item i
                 left join Customs c on i.customs_id = c.id
                 left join LatestBids lb on i.item_id = lb.item_id and lb.rn = 1
                 left join Delivery d on i.item_id = d.item_id
                 left join (select item_id, url
                            from Image
                            where seq = 0) img on i.item_id = img.item_id
        where lb.is_success = 1
          and c.id = #{id}
    </select>

</mapper>
